{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./Auth/auth.service\";\nimport * as i2 from \"@auth0/angular-jwt\";\nimport * as i3 from \"./Shared/signalr.service\";\nimport * as i4 from \"./signal-r/signalr-auth.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/router\";\n\nfunction AppComponent_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 2);\n    i0.ɵɵlistener(\"click\", function AppComponent_button_1_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.logOut());\n    });\n    i0.ɵɵtext(1, \" Logout \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(authService, jwtHelper, signalrService, signalrAuthService) {\n      this.authService = authService;\n      this.jwtHelper = jwtHelper;\n      this.signalrService = signalrService;\n      this.signalrAuthService = signalrAuthService;\n      this.title = 'Phonebook App';\n    }\n\n    ngOnInit() {\n      this.signalrService.startConnection();\n      this.logoutListener();\n    }\n\n    ngOnDestroy() {\n      this.signalrService.hubConnection$.off(\"ChatAuthSuccessResponse\");\n    }\n\n    isAuthenticated() {\n      const token = this.authService.getToken();\n\n      if (token && !this.jwtHelper.isTokenExpired(token)) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n    logOut() {\n      this.authService.removeToken(); // signal r\n\n      this.signalrService.hubConnection$.invoke(\"Logout\", this.signalrService.userData$.connectionId).catch(err => console.error(err)); // this.isAuthenticated();\n    } // logout listener\n\n\n    logoutListener() {\n      this.signalrService.hubConnection$.on(\"LogoutResponse\", () => {\n        localStorage.removeItem(\"userId\");\n        location.reload();\n      });\n    }\n\n  }\n\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.JwtHelperService), i0.ɵɵdirectiveInject(i3.SignalrService), i0.ɵɵdirectiveInject(i4.SignalrAuthService));\n  };\n\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 3,\n    vars: 1,\n    consts: [[1, \"container\"], [\"type\", \"button\", \"class\", \"btn btn-info mt-2 float-end\", \"routerLink\", \"/login\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"button\", \"routerLink\", \"/login\", 1, \"btn\", \"btn-info\", \"mt-2\", \"float-end\", 3, \"click\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, AppComponent_button_1_Template, 2, 0, \"button\", 1);\n        i0.ɵɵelement(2, \"router-outlet\");\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isAuthenticated());\n      }\n    },\n    dependencies: [i5.NgIf, i6.RouterOutlet, i6.RouterLink]\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}