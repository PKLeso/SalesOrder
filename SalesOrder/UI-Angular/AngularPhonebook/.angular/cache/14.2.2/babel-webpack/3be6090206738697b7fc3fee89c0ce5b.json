{"ast":null,"code":"import * as signalR from '@microsoft/signalr';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/Shared/signalr.service\";\nimport * as i2 from \"@angular/router\";\nexport let SignalrAuthService = /*#__PURE__*/(() => {\n  class SignalrAuthService {\n    constructor(signalrService, router) {\n      var _a;\n\n      this.signalrService = signalrService;\n      this.router = router;\n      let tempUserId = localStorage.getItem(\"userId\");\n\n      if (tempUserId) {\n        if (((_a = this.signalrService.hubConnection$) === null || _a === void 0 ? void 0 : _a.state) === signalR.HubConnectionState.Connected) {\n          this.signalrService.reauthenticateListener();\n          this.signalrService.reauthChat(tempUserId);\n        } else {\n          this.signalrService.signalrSubjObject().subscribe(subj => {\n            if (subj.type == \"HubConnStarted\") {\n              this.signalrService.reauthenticateListener();\n              this.signalrService.reauthChat(tempUserId);\n            }\n          });\n        }\n      }\n    }\n\n  }\n\n  SignalrAuthService.ɵfac = function SignalrAuthService_Factory(t) {\n    return new (t || SignalrAuthService)(i0.ɵɵinject(i1.SignalrService), i0.ɵɵinject(i2.Router));\n  };\n\n  SignalrAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SignalrAuthService,\n    factory: SignalrAuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return SignalrAuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}