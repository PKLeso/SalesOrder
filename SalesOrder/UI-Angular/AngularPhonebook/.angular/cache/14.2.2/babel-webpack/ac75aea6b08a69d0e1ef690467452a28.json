{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet AppComponent = class AppComponent {\n  constructor(authService, jwtHelper, signalrService, signalrAuthService) {\n    this.authService = authService;\n    this.jwtHelper = jwtHelper;\n    this.signalrService = signalrService;\n    this.signalrAuthService = signalrAuthService;\n    this.title = 'Phonebook App';\n  }\n\n  ngOnInit() {\n    this.signalrService.startConnection();\n    this.logoutListener();\n  }\n\n  ngOnDestroy() {\n    this.signalrService.hubConnection$.off(\"ChatAuthSuccessResponse\");\n  }\n\n  isAuthenticated() {\n    const token = this.authService.getToken();\n\n    if (token && !this.jwtHelper.isTokenExpired(token)) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  logOut() {\n    this.authService.removeToken();\n    console.log(\"conn Id: \", this.signalrService.userData$.connectionId); // signal r\n\n    this.signalrService.hubConnection$.invoke(\"Logout\", this.signalrService.userData$.connectionId).catch(err => console.error(err)); // this.isAuthenticated();\n  } // logout listener\n\n\n  logoutListener() {\n    this.signalrService.hubConnection$.on(\"LogoutResponse\", () => {\n      localStorage.removeItem(\"userId\");\n      this.userOfListener();\n      location.reload();\n    });\n  }\n\n  userOfListener() {\n    this.signalrService.hubConnection$.on(\"UserOff\", userId => {\n      console.log('remove: ', userId); //this.users = this.users.filter(f => f.id != userId);\n    });\n  }\n\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})], AppComponent);\nexport { AppComponent };","map":null,"metadata":{},"sourceType":"module"}