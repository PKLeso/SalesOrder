{"ast":null,"code":"import * as signalR from '@microsoft/signalr';\nimport { Message } from \"../Shared/models/message-model\";\nimport { User } from '../Shared/models/user-model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/Shared/signalr.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\n\nfunction SignalRAuthComponent_ul_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"ul\", 12)(1, \"li\", 13);\n    i0.ɵɵlistener(\"click\", function SignalRAuthComponent_ul_8_Template_li_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const user_r3 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.selectedUser = user_r3);\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const user_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r3.name);\n  }\n}\n\nfunction SignalRAuthComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const msg_r6 = ctx.$implicit;\n    i0.ɵɵclassProp(\"mine\", msg_r6.mine);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", msg_r6.content, \" \");\n  }\n}\n\nexport let SignalRAuthComponent = /*#__PURE__*/(() => {\n  class SignalRAuthComponent {\n    constructor(signalrService) {\n      this.signalrService = signalrService;\n      this.users = new Array();\n      this.selectedUser = new User();\n      this.message = '';\n    }\n\n    ngOnInit() {\n      var _a;\n\n      this.sendMessageListener();\n      this.signalrService.chatAuthListenerSuccess();\n      this.signalrService.chatAuthFailResponse();\n      this.userOnListener();\n      this.userOfListener();\n      this.getOnlineUsersListener();\n\n      if (((_a = this.signalrService.hubConnection$) === null || _a === void 0 ? void 0 : _a.state) === signalR.HubConnectionState.Connected) {\n        this.getOnlineUsers();\n      } else {\n        this.signalrService.signalrSubject.subscribe(subj => {\n          if (subj.type == \"HubConnStarted\") {\n            this.getOnlineUsers();\n          }\n        });\n      }\n    }\n\n    ngOnDestroy() {\n      this, this.signalrService.hubConnection$.off(\"chatAuthSuccessResponse\");\n      this, this.signalrService.hubConnection$.off(\"chatAuthFailResponse\");\n    }\n\n    userOnListener() {\n      this.signalrService.hubConnection$.on(\"UserOn\", newUser => {\n        console.log(newUser);\n        this.users.push(newUser);\n      });\n    }\n\n    userOfListener() {\n      this.signalrService.hubConnection$.on(\"UserOff\", userId => {\n        this.users = this.users.filter(f => f.id != userId);\n      });\n    }\n\n    getOnlineUsers() {\n      this.signalrService.hubConnection$.invoke(\"GetOnlineUsers\").catch(err => console.error(err));\n    }\n\n    getOnlineUsersListener() {\n      this.signalrService.hubConnection$.on(\"GetOnlineUsersResponse\", onlineUsers => {\n        console.log('online users: ', onlineUsers);\n        this.users = [...onlineUsers];\n      });\n    }\n\n    sendMessage() {\n      console.log('selected user: ', this.selectedUser);\n      if (this.message.trim() === \"\" || this.message == null) return;\n      this.signalrService.hubConnection$.invoke(\"SendMessage\", this.selectedUser.connectionId, this.message).catch(err => console.error(err));\n\n      if (this.selectedUser.messages == null) {\n        this.selectedUser.messages = [];\n      }\n\n      this.selectedUser.messages.push(new Message(this.message, true)); //this.message = \"\";\n    }\n\n    sendMessageListener() {\n      this.signalrService.hubConnection$.on(\"SendMesssageResponse\", (connId, message) => {\n        let receiver = this.users.find(u => u.connectionId === connId);\n\n        if ((receiver === null || receiver === void 0 ? void 0 : receiver.messages) == null) {\n          // do something\n          receiver.messages = [];\n        }\n\n        receiver.messages.push(new Message(message, false));\n      });\n    }\n\n  }\n\n  SignalRAuthComponent.ɵfac = function SignalRAuthComponent_Factory(t) {\n    return new (t || SignalRAuthComponent)(i0.ɵɵdirectiveInject(i1.SignalrService));\n  };\n\n  SignalRAuthComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SignalRAuthComponent,\n    selectors: [[\"app-signal-r-auth\"]],\n    decls: 20,\n    vars: 7,\n    consts: [[1, \"container-fluid\"], [1, \"row\"], [1, \"col-6\", \"pl-4\"], [1, \"col-12\", \"col-sm\", \"offset-sm-3\", \"mt4\"], [\"class\", \"list-group\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-12\", \"col-sm\", \"mt-4\"], [\"id\", \"chatBox\"], [\"id\", \"messageBox\", 3, \"scrollTop\"], [\"messageBox\", \"\"], [\"class\", \"msg\", 3, \"mine\", 4, \"ngFor\", \"ngForOf\"], [\"id\", \"textArea\", 3, \"ngModel\", \"ngModelChange\"], [\"id\", \"sendBtn\", 1, \"btn\", \"btn-primary\", 3, \"disabled\", \"click\"], [1, \"list-group\"], [1, \"list-group-item\", 2, \"cursor\", \"pointer\", 3, \"click\"], [1, \"msg\"]],\n    template: function SignalRAuthComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(4, \"div\", 1)(5, \"div\", 3)(6, \"label\");\n        i0.ɵɵtext(7, \"Online Users\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(8, SignalRAuthComponent_ul_8_Template, 3, 1, \"ul\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 5)(10, \"label\")(11, \"b\");\n        i0.ɵɵtext(12);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"div\", 6)(14, \"div\", 7, 8);\n        i0.ɵɵtemplate(16, SignalRAuthComponent_div_16_Template, 2, 3, \"div\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"textarea\", 10);\n        i0.ɵɵlistener(\"ngModelChange\", function SignalRAuthComponent_Template_textarea_ngModelChange_17_listener($event) {\n          return ctx.message = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function SignalRAuthComponent_Template_button_click_18_listener() {\n          return ctx.sendMessage();\n        });\n        i0.ɵɵtext(19, \"Send\");\n        i0.ɵɵelementEnd()()()()();\n      }\n\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(15);\n\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" Welcome \", ctx.signalrService.userData$ == null ? null : ctx.signalrService.userData$.name, \" \");\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.users);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(ctx.selectedUser == null ? null : ctx.selectedUser.name);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"scrollTop\", _r1.scrollHeight);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.selectedUser == null ? null : ctx.selectedUser.messages);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.message);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.selectedUser == null);\n      }\n    },\n    dependencies: [i2.NgForOf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel],\n    styles: [\"#chatBox[_ngcontent-%COMP%]{border:1px solid black;border-radius:10px;height:320px;position:relative}#messageBox[_ngcontent-%COMP%]{padding:5px 10px;height:200px;overflow-y:auto}.msg[_ngcontent-%COMP%]{border:1px solid lightgray;border-radius:15px;padding:5px 10px;background-color:#7fffd4;margin:5px 0;word-break:break-word}.msg.mine[_ngcontent-%COMP%]{background-color:#badeeb}#textArea[_ngcontent-%COMP%]{position:absolute;bottom:40px;width:100%;max-height:80px;min-height:80px}#sendBtn[_ngcontent-%COMP%]{position:absolute;bottom:0;max-height:40px;max-width:100%}\"]\n  });\n  return SignalRAuthComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}